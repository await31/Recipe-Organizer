@model IEnumerable<BusinessObjects.Models.Recipe>

@inject SignInManager<Account> SignInManager
@using Microsoft.AspNetCore.Identity;
@inject UserManager<Account> UserManager

@{
    ViewBag.Title = "View Recipe";
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null) {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@*
        <form class="form-inline" asp-controller="Recipes" asp-action="Search">
        <input class="form-control mr-sm-2" id="searchString" name="searchString" type="text" placeholder="Search" aria-label="Search" value="@ViewData["FilterSearch"]" />
        <input class="btn btn-outline-success my-2 my-sm-0" type="submit" value="Search" />
    </form>
    <div class="row">
        <div class="px-0">
            <br />
            <div class="col-5">
                <a asp-controller="Recipes" asp-action="Create" class="btn btn-success fw-bold text-light mt-2"><i class="fa-solid fa-folder-plus"></i> New Recipes</a>
            </div>
            <br />
            <div class="container row">
                <div class="col-sm-2">
                    <form id="formFilter" name="formFilter" class="form-inline" asp-controller="Recipes" asp-action="Filter">

                        <input class="form-control mr-sm-2" id="includeIngredients" name="includeIngredients" type="text" placeholder="Include Ingredients" />
                        <label class="form-label d-none" for="includeIngredients">Include Ingredients:</label>

                        <label for="recipeCategory" class="control-label">Recipe Category:</label>
                        <select class="form-control" name="recipeCategory" asp-items="ViewBag.FkRecipeCategoryId" onchange="document.getElementById('btnSubmit').click();">
                            <option value="All">All</option>
                        </select>
                        <label for="prepTime" class="form-label">PrepTime:</label>
                        <select class="form-select" name="prepTime" onchange="document.getElementById('btnSubmit').click();">
                            <option value="All">All</option>
                            @for (var i = 5; i < 30; i += 5)
                            {
                                @if (!(String.IsNullOrEmpty(@ViewData["FilterPrepTime"].ToString())) && (@ViewData["FilterPrepTime"].Equals(i.ToString())))
                                {
                                    <option value="@i" selected>0 - @i</option>
                                }
                                else
                                {
                                    <option value="@i">0 - @i</option>
                                }
                            }
                        </select>
                        <label for="difficulty" class="form-label">Difficulty:</label>
                        <select class="form-select" name="difficulty" onchange="document.getElementById('btnSubmit').click();">
                            <option value="All">All</option>
                            @for (var i = 1; i < 6; i++)
                            {
                                @if (!(String.IsNullOrEmpty(@ViewData["FilterDifficulty"].ToString())) && (@ViewData["FilterDifficulty"].Equals(i.ToString())))
                                {
                                    <option value="@i.ToString()" selected>@i.ToString()</option>
                                }
                                else
                                {
                                    <option value="@i.ToString()">@i.ToString()</option>
                                }
                            }
                        </select>
                        <input id="SearchString" name="searchString" type="hidden" value="@ViewData["FilterSearch"]" />
                        <input type="submit" hidden id="btnSubmit" value="Filter" />
                    </form>
                </div>
    *@
<br />
<br />

<div class="container-fluid">
    <table class="table table-bordered table-striped w-auto">
        <thead class="table-dark">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    ImgPath
                </th>
                <th>
                    PrepTime
                </th>
                <th>
                    Difficulty
                </th>
                <th>
                    Owner
                </th>
                <th>
                    CreatedDate
                </th>
                <th>
                    Category
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="p-0" style="width: 12%;">
                        <img src="@item.ImgPath" class="img-fluid w-100" style="max-height: 150px;">
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrepTime)
                    </td>

                    <td>
                        @if (item.Difficult == 1) {
                            <p class="text-color-change">Easy</p>
                        } else if (item.Difficult == 2) {
                            <p class="text-color-change">Medium</p>
                        } else if (item.Difficult == 3) {
                            <p class="text-color-change">Hard</p>
                        }
                    </td>
                    <td>
                        @item.FkUser?.UserName
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FkRecipeCategory.Name)
                    </td>
                    <td>
                        <a asp-controller="UserRecipes" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                    </td>
                    <td>
                        <a asp-controller="Recipes" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
<partial name="_Pager" model="@pager" />
</div>


