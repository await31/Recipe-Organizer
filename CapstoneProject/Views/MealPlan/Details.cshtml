@model BusinessObjects.Models.MealPlan
@{
    ViewBag.Title = "Planing Details";
    DateTime today = DateTime.Now;
}

<hr />
<div class="row">
    <div class="d-flex flex-row-reverse">
        <form method="post" asp-action="DeletePOST" asp-route-id="@Model.Id">
            <button class="btn btn-danger float-end" type="submit">Delete this Plan <i class="fa fa-trash-can"></i></button>
        </form>
        <button class="btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#exampleModalCenter" id="mealPlanId" data-mealplan-id="@Model.Id">Remind <i class="fa-solid fa-bell"></i></button>
    </div>
    <h1 class="text-center label-font">Planning Details</h1>
</div>

<style>
    /* Define the styles for the scrollbar */
    .overflow-auto::-webkit-scrollbar {
        width: 10px;
    }

    .overflow-auto::-webkit-scrollbar-track {
        background-color: #f1f1f1;
    }

    .overflow-auto::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 5px;
    }

        .overflow-auto::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }

        .card-title {
        display: -webkit-box;
        -webkit-line-clamp: 1; /* Maximum number of lines to show */
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

<section class="py-4">
    <div class="row gx-4">
        <div class="col-lg-8 mb-4">
            <div class="border rounded-2 px-3 py-2 bg-white">
                <!-- Pills navs -->
                <ul class="nav nav-pills nav-justified mb-3" id="ex1" role="tablist">
                    <li class="nav-item d-flex" role="presentation">
                        <a class="label-font nav-link d-flex align-items-center justify-content-center w-100 active"
                           id="ex1-tab-1" data-mdb-toggle="pill" href="#ex1-pills-1" role="tab"
                           aria-controls="ex1-pills-1" aria-selected="true">General Information</a>
                    </li>
                    <li class="nav-item d-flex" role="presentation">
                        <a class="label-font nav-link d-flex align-items-center justify-content-center w-100"
                           id="ex1-tab-2" data-mdb-toggle="pill" href="#ex1-pills-2" role="tab"
                           aria-controls="ex1-pills-2" aria-selected="false">Nutrition Facts</a>
                    </li>
                </ul>
                <!-- Pills navs -->
                <!-- Pills content -->
                <div class="tab-content" id="ex1-content">
                    <div class="tab-pane fade show active" id="ex1-pills-1" role="tabpanel"
                         aria-labelledby="ex1-tab-1">
                        <ul class="list-group">
                            <li class="list-group-item label-font">
                                Title: @Model.Title
                            </li>
                            <li class="list-group-item label-font">
                                Description: @Model.Description
                            </li>
                            <li class="list-group-item label-font">
                                Date: @Model.Date?.ToLongDateString()
                            </li>
                            <li class="list-group-item label-font">
                                Number of recipes: &nbsp; @Model.Recipes.Count()
                            </li>
                            <li class="list-group-item label-font">
                                Customize color: @(new System.Globalization.CultureInfo("en-US").TextInfo.ToTitleCase(Model.Color))
                            </li>
                        </ul>
                    </div>
                    <div class="tab-pane fade mb-2" id="ex1-pills-2" role="tabpanel"
                         aria-labelledby="ex1-tab-2">
                        @if (((Nutrition)ViewData["TotalNutrition"]) != null) {
                            <ul class="list-group">
                                <li class="list-group-item label-font">
                                    Calories: @(((Nutrition)ViewData["TotalNutrition"]).Calories) (kcal)
                                </li>
                                <li class="list-group-item label-font">
                                    Fat: @(((Nutrition)ViewData["TotalNutrition"]).Fat) (g)
                                </li>
                                <li class="list-group-item label-font">
                                    Protein: @(((Nutrition)ViewData["TotalNutrition"]).Protein) (g)
                                </li>
                                <li class="list-group-item label-font">
                                    Fibre: @(((Nutrition)ViewData["TotalNutrition"]).Fibre) (g)
                                </li>
                                <li class="list-group-item label-font">
                                    Carbohydrate: @(((Nutrition)ViewData["TotalNutrition"]).Carbohydrate) (g)
                                </li>
                                <li class="list-group-item label-font">
                                    Cholesterol: @(((Nutrition)ViewData["TotalNutrition"]).Cholesterol) (g)
                                </li>
                            </ul>
                        }
                    </div>
                </div>
                <!-- Pills content -->
            </div>
        </div>
        <div class="col-lg-4 excludePrint">
            <div class="px-0 border shadow-0 bg-light">
                <h3 class="card-title text-center py-4 label-font">Grocery list <i class="fa-solid fa-cart-shopping"></i></h3>
                <div class="accordion accordion-flush" id="accordionFlushExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header bg-light">
                            <button class="accordion-button collapsed bg-light text-dark" type="button" data-bs-toggle="collapse" data-bs-target="#all" aria-expanded="false" aria-controls="all">
                                Ingredients for this Planning
                            </button>
                        </h2>
                        <div id="all" class="accordion-collapse collapse show" data-bs-parent="#accordionFlushExample">
                            <div class="accordion-body bg-light">
                                <ul class="list-group overflow-auto" style="height: 400px;">
                                    @foreach (var item in (List<RecipeIngredient>)ViewData["GroupedIngredients"]) {
                                        <li class="list-group-item label-font">
                                            <i class="fa-regular fa-bookmark text-success"></i> &nbsp; @item.Quantity @item.UnitOfMeasure @item.Ingredient.Name
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    @foreach (var item in Model.Recipes) {
                        <div class="accordion-item">
                            <h2 class="accordion-header bg-light">
                                <button class="accordion-button collapsed bg-light text-dark" type="button" data-bs-toggle="collapse" data-bs-target="#@item.Id" aria-expanded="false" aria-controls="@item.Id">
                                    Ingredients for @item.Name
                                </button>
                            </h2>
                            <div id="@item.Id" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                                <div class="accordion-body bg-light">
                                    <ul class="list-group overflow-auto" style="height: 200px;">
                                        @foreach (var ingredient in item.RecipeIngredients) {
                                                    <li class="list-group-item text-center label-font">
                                                @ingredient.Quantity @ingredient.UnitOfMeasure @ingredient.Ingredient.Name
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>




<h2 class="label-font text-center text-success">List of recipes</h2>
<hr />
<hr />

<div class="row row-cols-1 row-cols-md-4 g-4">
    @foreach (var item in Model.Recipes) {
        <a class="text-decoration-none" asp-controller="UserRecipes" asp-action="Details" asp-route-id="@item.Id" target="_blank">
            <div class="col">
                <div class="card">
                    <img src="@item.ImgPath" class="card-img-top" style="height: 200px;">
                    <div class="card-body">
                        <h5 class="card-title text-center card-limit-1 mb-3 label-font text-color-change">@item.Name</h5>
                        <p class="card-text text-color-change">Preparation time: @item.PrepTime mins</p>
                        <p class="card-text text-color-change">Serving size: @item.ServingSize people</p>
                        @switch (item.Difficult) {
                            case 1:
                                <p class="card-text text-color-change">Difficult: Easy</p>
                                break;
                            case 2:
                                <p class="card-text text-color-change">Difficult: Medium</p>
                                break;
                            case 3:
                                <p class="card-text text-color-change">Difficult: Hard</p>
                                break;
                            default:
                                <p class="card-text text-color-change">Difficult: No Information</p>
                                break;
                        }
                    </div>
                    <div class="card-footer">
                        <small class="text-color-change float-end">@item?.CreatedDate?.ToShortDateString()</small>
                    </div>
                </div>
            </div>
        </a>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-center" id="exampleModalLongTitle">Create reminder for this plan</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <label for="executionDateTime" class="form-label">Select date and time:</label>
                    <input type="datetime-local" name="executionDateTime" id="executionDateTime" min="@today.ToString("yyyy-MM-dd HH:mm")" class="form-control" required>
                    <div class="mb-3 form-group">
                        <label for="timezone" class="mt-2 form-label">Select timezone:</label>
                        <select id="timezone" name="timezone" class="form-control" required>
                            <option value="SE Asia Standard Time">(GMT+07:00) Bangkok, Hanoi, Jakarta</option>
                            @*
                            <option value="Morocco Standard Time">(GMT) Casablanca</option>
                            <option value="GMT Standard Time">(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London</option>
                            <option value="Greenwich Standard Time">(GMT) Monrovia, Reykjavik</option>
                            <option value="W. Europe Standard Time">(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</option>
                            <option value="Central Europe Standard Time">(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</option>
                            <option value="Romance Standard Time">(GMT+01:00) Brussels, Copenhagen, Madrid, Paris</option>
                            <option value="Central European Standard Time">(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb</option>
                            <option value="W. Central Africa Standard Time">(GMT+01:00) West Central Africa</option>
                            <option value="Jordan Standard Time">(GMT+02:00) Amman</option>
                            <option value="GTB Standard Time">(GMT+02:00) Athens, Bucharest, Istanbul</option>
                            <option value="Middle East Standard Time">(GMT+02:00) Beirut</option>
                            <option value="Egypt Standard Time">(GMT+02:00) Cairo</option>
                            <option value="South Africa Standard Time">(GMT+02:00) Harare, Pretoria</option>
                            <option value="FLE Standard Time">(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</option>
                            <option value="Israel Standard Time">(GMT+02:00) Jerusalem</option>
                            <option value="E. Europe Standard Time">(GMT+02:00) Minsk</option>
                            <option value="Namibia Standard Time">(GMT+02:00) Windhoek</option>
                            <option value="Arabic Standard Time">(GMT+03:00) Baghdad</option>
                            <option value="Arab Standard Time">(GMT+03:00) Kuwait, Riyadh</option>
                            <option value="Russian Standard Time">(GMT+03:00) Moscow, St. Petersburg, Volgograd</option>
                            <option value="E. Africa Standard Time">(GMT+03:00) Nairobi</option>
                            <option value="Georgian Standard Time">(GMT+03:00) Tbilisi</option>
                            <option value="Iran Standard Time">(GMT+03:30) Tehran</option>
                            <option value="Arabian Standard Time">(GMT+04:00) Abu Dhabi, Muscat</option>
                            <option value="Azerbaijan Standard Time">(GMT+04:00) Baku</option>
                            <option value="Mauritius Standard Time">(GMT+04:00) Port Louis</option>
                            <option value="Caucasus Standard Time">(GMT+04:00) Yerevan</option>
                            <option value="Afghanistan Standard Time">(GMT+04:30) Kabul</option>
                            <option value="Ekaterinburg Standard Time">(GMT+05:00) Ekaterinburg</option>
                            <option value="Pakistan Standard Time">(GMT+05:00) Islamabad, Karachi</option>
                            <option value="West Asia Standard Time">(GMT+05:00) Tashkent</option>
                            <option value="India Standard Time">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>
                            <option value="Sri Lanka Standard Time">(GMT+05:30) Sri Jayawardenepura</option>
                            <option value="Nepal Standard Time">(GMT+05:45) Kathmandu</option>
                            <option value="N. Central Asia Standard Time">(GMT+06:00) Almaty, Novosibirsk</option>
                            <option value="Central Asia Standard Time">(GMT+06:00) Astana, Dhaka</option>
                            <option value="Myanmar Standard Time">(GMT+06:30) Yangon (Rangoon)</option>
                            <option value="North Asia Standard Time">(GMT+07:00) Krasnoyarsk</option>
                            <option value="China Standard Time">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>
                            <option value="North Asia East Standard Time">(GMT+08:00) Irkutsk, Ulaan Bataar</option>
                            <option value="Singapore Standard Time">(GMT+08:00) Kuala Lumpur, Singapore</option>
                            <option value="W. Australia Standard Time">(GMT+08:00) Perth</option>
                            <option value="Taipei Standard Time">(GMT+08:00) Taipei</option>
                            <option value="Tokyo Standard Time">(GMT+09:00) Osaka, Sapporo, Tokyo</option>
                            <option value="Korea Standard Time">(GMT+09:00) Seoul</option>
                            <option value="Yakutsk Standard Time">(GMT+09:00) Yakutsk</option>
                            <option value="Cen. Australia Standard Time">(GMT+09:30) Adelaide</option>
                            <option value="AUS Central Standard Time">(GMT+09:30) Darwin</option>
                            <option value="E. Australia Standard Time">(GMT+10:00) Brisbane</option>
                            <option value="AUS Eastern Standard Time">(GMT+10:00) Canberra, Melbourne, Sydney</option>
                            <option value="West Pacific Standard Time">(GMT+10:00) Guam, Port Moresby</option>
                            <option value="Tasmania Standard Time">(GMT+10:00) Hobart</option>
                            <option value="Vladivostok Standard Time">(GMT+10:00) Vladivostok</option>
                            <option value="Central Pacific Standard Time">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>
                            <option value="New Zealand Standard Time">(GMT+12:00) Auckland, Wellington</option>
                            <option value="Fiji Standard Time">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</option>
                            <option value="Tonga Standard Time">(GMT+13:00) Nuku'alofa</option>
                            <option value="Azores Standard Time">(GMT-01:00) Azores</option>
                            <option value="Cape Verde Standard Time">(GMT-01:00) Cape Verde Is.</option>
                            <option value="Mid-Atlantic Standard Time">(GMT-02:00) Mid-Atlantic</option>
                            <option value="E. South America Standard Time">(GMT-03:00) Brasilia</option>
                            <option value="Argentina Standard Time">(GMT-03:00) Buenos Aires</option>
                            <option value="SA Eastern Standard Time">(GMT-03:00) Georgetown</option>
                            <option value="Greenland Standard Time">(GMT-03:00) Greenland</option>
                            <option value="Montevideo Standard Time">(GMT-03:00) Montevideo</option>
                            <option value="Newfoundland Standard Time">(GMT-03:30) Newfoundland</option>
                            <option value="Atlantic Standard Time">(GMT-04:00) Atlantic Time (Canada)</option>
                            <option value="SA Western Standard Time">(GMT-04:00) La Paz</option>
                            <option value="Central Brazilian Standard Time">(GMT-04:00) Manaus</option>
                            <option value="Pacific SA Standard Time">(GMT-04:00) Santiago</option>
                            <option value="Venezuela Standard Time">(GMT-04:30) Caracas</option>
                            <option value="SA Pacific Standard Time">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</option>
                            <option value="Eastern Standard Time">(GMT-05:00) Eastern Time (US & Canada)</option>
                            <option value="US Eastern Standard Time">(GMT-05:00) Indiana (East)</option>
                            <option value="Central America Standard Time">(GMT-06:00) Central America</option>
                            <option value="Central Standard Time">(GMT-06:00) Central Time (US & Canada)</option>
                            <option value="Central Standard Time (Mexico)">(GMT-06:00) Guadalajara, Mexico City, Monterrey</option>
                            <option value="Canada Central Standard Time">(GMT-06:00) Saskatchewan</option>
                            <option value="US Mountain Standard Time">(GMT-07:00) Arizona</option>
                            <option value="Mountain Standard Time (Mexico)">(GMT-07:00) Chihuahua, La Paz, Mazatlan</option>
                            <option value="Mountain Standard Time">(GMT-07:00) Mountain Time (US & Canada)</option>
                            <option value="Pacific Standard Time">(GMT-08:00) Pacific Time (US & Canada)</option>
                            <option value="Pacific Standard Time (Mexico)">(GMT-08:00) Tijuana, Baja California</option>
                            <option value="Alaskan Standard Time">(GMT-09:00) Alaska</option>
                            <option value="Hawaiian Standard Time">(GMT-10:00) Hawaii</option>
                            <option value="Samoa Standard Time">(GMT-11:00) Midway Island, Samoa</option>
                            <option value="Dateline Standard Time">(GMT-12:00) International Date Line West</option>
                            *@
                        </select>
                    </div>
                    <div id="emailHelp" class="form-text">We'll remind you via the email you provided us.</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="saveChangesBtn" type="button" class="btn btn-success">Create</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery-3.7.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
    $(document).ready(function () {
        // Restore the toggled state on page load
        $('li.list-group-item i').each(function () {
            var bookmark = $(this);
            var isToggled = localStorage.getItem('bookmark_' + bookmark.parent().index());

            if (isToggled === 'true') {
                bookmark.removeClass('fa-regular').addClass('fa-solid');
            }
        });

        // Add a click event listener to the <i> tag
        $('li.list-group-item i').on('click', function () {
            var bookmark = $(this);
            var index = bookmark.parent().index();

            // Toggle the classes
            bookmark.toggleClass('fa-regular fa-solid');

            // Update the toggled state in localStorage only if clicked
            if (bookmark.hasClass('fa-regular')) {
                localStorage.removeItem('bookmark_' + index);
            } else {
                localStorage.setItem('bookmark_' + index, 'true');
            }
        });
    });

    $(document).ready(function () {
        $("#saveChangesBtn").click(function () {

            var executionDateTime = $("#executionDateTime").val();
            var timezone = $("#timezone").val();
            var mealPlanId = $("#mealPlanId").data("mealplan-id");

            var formData = new FormData();
            formData.append("id", mealPlanId);
            formData.append("executionDateTime", executionDateTime);
            formData.append("timezone", timezone);

            $.ajax({
                url: '/MealPlan/HandleJob',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        toastr.success('Reminder created successfully');
                        $('.btn-close').trigger('click');
                    } else {
                        toastr.warning('Failed to create the reminder. The reminder is already exist.');
                    }
                },
                error: function (xhr, status, error) {
                    $("#loader").hide();
                    toastr.warning('An error occurred while creating the reminder.');
                }
            });
        });
    });
</script>
