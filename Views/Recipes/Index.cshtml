
@model PaginatedList<CapstoneProject.Models.Recipe>
@{
    ViewBag.Title = "Create recipe";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="px-0">
        <br />
        <div class="col-5">
            <a asp-controller="Recipes" asp-action="Create" class="btn btn-success fw-bold text-light mt-2"><i class="fa-solid fa-folder-plus"></i> New Recipes</a>
        </div>
        <br />
        <table class="table table-bordered table-striped w-100">
            <thead class="table-dark">
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Name)*@
                        Name
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.ImgPath)*@
                        ImgPath
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Description)*@
                        Description
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Nutrition)*@
                        Nutrition
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.PrepTime)*@
                        PrepTime
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Difficult)*@
                        Difficult
                    </th>
                    <th>
                        RecipeOwner
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.CreatedDate)*@
                        CreatedDate
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FkRecipe)*@
                        FkRecipe
                    </th>
                    <th>
                        RecipeCategory
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Status)*@
                        Status
                    </th>
                    <th colspan="3">
                        Action
                    </th>
                    <th colspan="2">
                        Approve
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model) {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ImgPath)
                        </td>
                        <td>
                            @Html.Raw(item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nutrition)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PrepTime)
                        </td>
                        <td>
                            @{
                                string difficulty = "";
                                switch (item.Difficult)
                                {
                                    case 0 :
                                        difficulty = "Nothing";
                                        break;
                                    case 1 :
                                        difficulty = "Easy";
                                        break;
                                    case 2 :
                                        difficulty = "Medium";
                                        break;
                                    case 3:
                                        difficulty = "Hard";
                                        break;
                                
                                }
                                }
                            @difficulty
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FkUserId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FkRecipe.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FkRecipeCategory.Name)
                        </td>
                        <td>
                            @if (item.Status == false) {
                                @Html.Raw("Deny");
                            }
                            else
                            {
                                @Html.Raw("Approved");
                            }
                        </td>
                        <td>
                            <a asp-controller="Recipes" asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                        </td>
                        <td>
                            <a asp-controller="Recipes" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                        <td>
                            <a asp-controller="Recipes" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                        <td>
                            <form method="post" asp-controller="Recipes" asp-action="Approve">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-link">Approve</button>
                            </form>
                        </td>
                        <td>
                            <form method="post" asp-controller="Recipes" asp-action="Deny">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-link">Deny</button>
                            </form>
                        </td>

                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>

    </div>
</div>