@model IEnumerable<Recipe>

@inject SignInManager<Account> SignInManager
@using Microsoft.AspNetCore.Identity;
@inject UserManager<Account> UserManager

@{
    var count = ViewData["count"];
    Pager pager = new Pager();
    int pageNo = 0;
    if(ViewBag.Pager != null) {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
    var parameters = string.IsNullOrEmpty(Context.Request.Path) ? "" : $"{Context.Request.QueryString.Value}";
    ViewBag.Title = "Search recipe";
}

<div class="row">
    <div class="px-0">
        <br />
        <div class="ms-3">
                <p> <i class="fa-solid fa-magnifying-glass"></i> @count recipe(s) found</p>
        </div>
        <div class="container row" style="max-width: 1320px;">
            <div class="col-sm-2">
                <form id="formFilter" name="formFilter" class="form-inline" asp-controller="UserRecipes" asp-action="Filter">
                    <input hidden name="includeIngredientsList" value="@ViewData["FilterIncludeList"]"></input>
                    <input class="form-control mr-sm-2" id="includeIngredients" name="includeIngredients" type="text" placeholder="Include Ingredients" />
                    <label class="form-label d-none" for="includeIngredients">Include Ingredients:</label>
                    @{
                        foreach (var item in ViewBag.IncludeList) {
                            <span>
                                @item
                                <a href="#" onclick="window.location.href = removeParameterFromUrl(window.location.href, 'IncludeList', '@item');return false;">
                                    <i class="fa fa-xmark text-danger" style="font-size:16px;"></i>
                                </a>
                            </span>
                        }
                    }
                    <br />
                    <input hidden name="excludeIngredientsList" value="@ViewData["FilterExcludeList"]"></input>
                    <input class="form-control mr-sm-2" id="excludeIngredients" name="excludeIngredients" type="text" placeholder="Exclude Ingredients" />
                    <label class="form-label d-none" for="excludeIngredients">Exclude Ingredients:</label>
                    @{
                        foreach (var item in ViewBag.ExcludeList) {
                            <span>
                                @item
                                <a href="#" onclick="window.location.href = removeParameterFromUrl(window.location.href, 'ExcludeList', '@item');return false;">

                                    <i class="fa fa-minus-circle" style="font-size:16px;color:black"></i>
                                </a>
                            </span>
                        }
                    }
                    <label for="recipeCategory" class="control-label mt-3 mb-1">Category:</label>
                    <select class="form-control" name="recipeCategory" asp-items="ViewBag.FkRecipeCategoryId" onchange="document.getElementById('btnSubmit').click();">
                        <option value="All">All</option>
                    </select>

                    <label for="prepTime" class="form-labe mt-2 mb-1">Preparation time (&le;):</label>
                    <select class="form-select" name="prepTime" asp-items="ViewBag.PrepTime" onchange="document.getElementById('btnSubmit').click();">
                        <option value="All">All</option>
                    </select>
                    <label for="difficulty" class="form-label mt-2 mb-1">Difficulty:</label>
                    <select class="form-select" name="difficulty" asp-items="ViewBag.Difficulty" onchange="document.getElementById('btnSubmit').click();">
                        <option value="All">All</option>
                    </select>
                    <input id="SearchString" name="searchString" type="hidden" value="@ViewData["FilterSearch"]" />
                    <input type="submit" hidden id="btnSubmit" value="Filter" />
                </form>

                <label class="mt-2">Sort by:</label>
                <select form="formFilter" class="form-control" name="SortBy" asp-items="ViewBag.SortBy" onchange="document.getElementById('btnSubmit').click();">
                </select>
            </div>

            <div class="col-sm-10">
                @if(Model.Count() == 0) {
                    <div class="row ms-5">
                        <div class="col-md-12 text-center">
                            <img src="~/images/noresult.png" style="width: 18%; height: auto;">
                            <p class="fw-bold mt-5">Apologies, but we couldn't find any recipes that meet your specified criteria.</p>
                        </div>
                    </div>
                } else {
                    <div class="row ms-5">
                        @foreach (var recipe in Model) {
                            <div class="card d-flex col-md-3 col-sm-6 mx-4 mb-4 px-0 overflow-hidden rounded-4 border-0" style="background: linear-gradient(180deg, rgba(255,255,255,1) 0%, rgba(192,246,255,0.4086426807050946) 100%); height:300px;">
                                <div class="position-relative" style="height: 60%;">
                                    @if (SignInManager.IsSignedIn(User)) {
                                        <div class="position-absolute rounded-circle bg-light p-2 pb-1" style="top: 3%; right: 3%;">
                                            <button class="unstyled-button add-favourite-button" data-bs-toggle="modal" data-bs-target="#favouriteModal" data-recipe-id="@recipe.Id">
                                                <i id="favourite-icon-@recipe.Id" class="fa fa-heart-o" style="font-size:32px;color:red"></i>
                                            </button>
                                        </div>
                                    }
                                    <img src="@recipe.ImgPath" class="img-fluid card-img-top" alt="Food" style="height: 100%">
                                </div>
                                <div class="mt-2" style="height: 40%;">
                                    <a asp-controller="UserRecipes" asp-action="Details" asp-route-id="@recipe.Id" class="text-decoration-none h-100">
                                        <div class="card-body pb-4 pt-3">
                                            <h4 class="card-title text-dark text-decoration-none text-center" style="font-family: Bahnschrift; white-space:nowrap; overflow: hidden; text-overflow:ellipsis;">@recipe.Name</h4>
                                            <div class="d-flex row mt-4 ms-3 mb-3">
                                                <div class="rounded-5 col-6 text-dark px-0">
                                                    @if(recipe.PrepTime < 360) {
                                                            <i class="fa-solid fa-clock"></i> <span class="text-dark" style="font-size: 14px;">@recipe.PrepTime minutes</span>
                                                        } else {
                                                            <i class="fa-solid fa-clock"></i> <span class="text-dark" style="font-size: 14px;">@(recipe.PrepTime/60) hours</span>
                                                        }
                                                    </div>
                                                <div class="rounded-5 col-6 text-dark px-0">
                                                    <i class="fa-solid fa-utensils"></i> <span class="text-dark" style="font-size: 12px;">@recipe.FkRecipeCategory?.Name</span>
                                                </div>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        } @*End of foreach*@
                           <partial name="_Pager" model="@pager"/>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="favouriteModal" tabindex="-1" aria-labelledby="favouriteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="favouriteModalLabel">Add to Collections</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    if (ViewBag.FavouriteList != null) {
                        foreach (var item in ViewBag.FavouriteList) {
                            <div class="form-check">
                                <input class="form-check-input favourite-checkbox" type="checkbox" id="favourite-checkbox-@item.Id" value="@item.Id">
                                <label class="form-check-label">@item.Name</label>
                            </div>
                        }
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="favourite-save" type="button" class="btn btn-primary" data-bs-dismiss="modal" data-recipe-id="0">Save</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery-3.7.0.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>
<script type="text/javascript">
    function removeParameterFromUrl(urlString, parameterName, parameterValue) {
        const url = new URL(urlString);
        const parameterValues = url.searchParams.get(parameterName).split(',');
        const updatedParameterValues = parameterValues.filter((item) => item != parameterValue);
        url.searchParams.set(parameterName, updatedParameterValues.join(','));
        return url.href;
    }
    $(function () {
        $("#includeIngredients, #excludeIngredients").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Ingredients/AutoComplete",
                    type: "POST",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item.name;
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                    failure: function (response) {
                        alert("Error");
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.val);
            },
            minLength: 1
        })
    });
    $(document).ready(function () {
        UpdateIcon();
        //This function will update the recipe id of modal
        //also unchecked all checkboxes
        $('.add-favourite-button').click(function () {
            var recipeId = $(this).data('recipe-id');
            $("#favourite-save").attr("data-recipe-id", recipeId);
            UpdateCheckbox(recipeId);
        });
        //This function will add the recipe into all selected favourite lists on clicking button with class add-favourite
        //currently only add in favourite list
        $('#favourite-save').click(function () {
            var recipeId = document.getElementById("favourite-save").dataset.recipeId;
            //Get all checked boxes' favourite ids
            var favouriteIds = $('input.favourite-checkbox:checkbox:checked').map(function () {
                return $(this).val();
            }).get();
            //Get all boxes' favourite ids
            var allfavouriteIds = $('.favourite-checkbox').map(function () {
                return $(this).val();
            }).get();

            $.ajax({
                url: '/Favourites/AddRecipe',
                type: 'POST',
                data: { recipeId: recipeId, favouriteIds: favouriteIds, allfavouriteIds: allfavouriteIds },
                success: UpdateIcon,
                error: function () {
                    alert('Error adding recipes to favorites.');
                }
            });
        });
    });
    function UpdateCheckbox(recipeId) {
        var favouriteIds = $('.favourite-checkbox').map(function () {
            return $(this).val();
        }).get();
        $('.favourite-checkbox').prop('checked', false); // Unchecks all boxes

        $.ajax({
            url: '/Favourites/GetAllFavouriteLists',
            type: 'POST',
            data: { recipeId: recipeId, favouriteIds: favouriteIds },
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].isFavorite) {
                        $('#favourite-checkbox-' + data[i].id).prop('checked', true); // Checks all boxes
                    }
                }
            },
            error: function () {
                alert('Error getting favorite status.');
            }
        });
    };
    function UpdateIcon() {
        var recipeId = @Html.Raw(Json.Serialize(@Model.Select(r=> r.Id).ToArray()));

        $.ajax({
            url: '/Favourites/GetAllFavouriteRecipes',
            type: 'POST',
            data: { recipeIds: recipeId },
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].isFavorite) {
                        $('#favourite-icon-' + data[i].recipeId).addClass('fa-heart');
                        $('#favourite-icon-' + data[i].recipeId).removeClass('fa-heart-o');
                    }
                    else {
                        $('#favourite-icon-' + data[i].recipeId).removeClass('fa-heart');
                        $('#favourite-icon-' + data[i].recipeId).addClass('fa-heart-o');
                    }
                }
            },
            error: function () {
                alert('Error getting favorite status.');
            }
        });
    }
</script>